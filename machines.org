#+STARTUP: overview

* Machines
:PROPERTIES:
:VISIBILITY: children
:END:
- Data files
  + Elfeed database
  + Emails
  + Org files (roam + inbox.org)
  + Syncthing shares
  + Project Repos


These are system specific settings for each of my machines


** Alpha
:PROPERTIES:
:name: Chaise Conn
:email:    chaise.conn@protonmail.com
:header-args:    :noweb yes :mkdirp true
:ID: alpha
:END:

My primary workstation

#+begin_src elisp :noweb-ref configs
(setq dotfiles-directory "~/dotfiles"
      org-directory "~/roam"
      org-roam-directory "~/roam"
      inbox-file "~/inbox.org"
      org-agenda-files `(,(f-join org-roam-directory "areas"))
      scrot-directory "~/Downloads")
#+end_src

#+include: ./base.org
#+include: ./email.org
#+include: ./finance.org
#+include: ./rss.org
#+include: ./brain.org
#+include: ./npm.org
#+include: ./vm.org

*** X
**** Autorandr
#+begin_src :tangle config/autorandr/desktop/config
output VGA-1
crtc 0
mode 1920x1080
pos 1080x0
primary
rate 60.00
output DVI-D-1
crtc 1
mode 1920x1080
pos 0x1080
rate 60.00
rotate right
output DVI-D-2
crtc 2
mode 1920x1080
pos 1080x1080
rate 60.00
output HDMI-3
crtc 3
mode 1920x1080
pos 3000x1080
rate 60.00
rotate left
#+end_src

**** Monitors
#+begin_src elisp :noweb-ref exwm-configs
(setq exwm-randr-workspace-monitor-plist '(0 "VGA-1" 1 "DVI-D-1" 2 "DVI-D-2" 3 "HDMI-3"))
#+end_src
*** Disks

| Drive                                | Size  | Encrypted? | Filesystem | Purpose |
|--------------------------------------+-------+------------+------------+---------|
| [[id:4c8f7bbc-fcef-419e-b7c3-c7fa335ada0d][Seagate Barracuda ST2000DM001-1CH164]] | 2TB   | Yes        | ext4       | Data    |
| Samsung SSD 850 PRO                  | 256GB | No         | btrfs      | Root    |

**** Data
:PROPERTIES:
:ID:       4c8f7bbc-fcef-419e-b7c3-c7fa335ada0d
:END:

GNU Guix currently does not support unencrypting LUKS devices with a keyfile at boot, so for now I have unlock and mound the drive manually after boot.

***** Preparation
Shred the disk

#+begin_src sh
sudo shred -n 1 -v --random-source /dev/random /dev/sda
#+end_src

Create the partition

#+begin_src sh :dir /sudo::/ :results output replace
#!/usr/bin/env bash
DEV=/dev/sda

parted --script ${DEV} mktable gpt
parted --script --align optimal ${DEV} mkpart Data 0% 100%
#+end_src

Create the encryption key

#+begin_src sh :dir /sudo::/ :results output replace
exec 2>&1
dd bs=512 count=4 if=/dev/random of=/mnt/machines/alpha/sda
#+end_src

Encrypt the partition

#+begin_src sh :dir /sudo::/
# --sectore-size: Increasing sector size from 512 bytes to 4096 bytes can provide better performance on most of the modern storage devices and also with some hw encryption accelerators
# --use-random : Block until entropy is available instead of using weak entropy (like /dev/urandom)
cryptsetup luksFormat --use-random --batch-mode --key-file /mnt/machines/alpha/sda /dev/sda1
#+end_src

Create the filesystem

#+begin_src sh :async :dir /sudo::/
exec 2>&1
TEMP_NAME=$(basename $(mktemp -q))

cryptsetup luksOpen --key-file /mnt/machines/alpha/sda /dev/sda1 ${TEMP_NAME}
mkfs.ext4 /dev/mapper/${TEMP_NAME}
cryptsetup luksClose ${TEMP_NAME}
#+end_src
** USB
:PROPERTIES:
:name: Chaise Conn
:email:    chaise.conn@protonmail.com
:header-args:    :noweb yes :mkdirp true
:ID: usb
:END:
This is a version of my configuration for use as a bootable medium.

#+begin_src elisp :noweb-ref configs
(setq dotfiles-directory "~/dotfiles"
      inbox-file "~/inbox.org"
      scrot-directory "~/Downloads")
#+end_src

#+include: ./base.org

*** Build

You can build a disk image of the OS using:

#+begin_src sh
guix system image dotfiles/machines/usb/config.scm
#+end_src

It will print the path to the image file when it's done
*** Installation

1. Burn the OS to the USB drive
   #+begin_src sh
dd if=/path/to/image of=/dev/sdx bs=256k status=progress
   #+end_src
2. Create home partition
   #+begin_src sh
parted --script --align optimal /dev/sdg mkpart primary 5850M 100%
mkfs.ext4 /dev/sdx3
   #+end_src
3. Install doom
   #+begin_src sh
git clone 'https://github.com/hlissner/doom-emacs' /mnt/guest/.emacs.d
HOME=/mnt/guest /mnt/guest/.emacs.d/bin/doom install --no-config --no-env
   #+end_src

4. Copy dotfiles into home partition
   #+begin_src sh
mount /dev/sdx3 /mnt
mkdir -p /mnt/guest
cd /mnt/guest
git clone https://github.com/Jdaco/dotfiles
   #+end_src

5. Expand dotfiles
#+begin_src sh
/mnt/guest/dotfiles/bin/config-tangle ~/dotfiles /mnt/guest usb
#+end_src

** Iontra
:PROPERTIES:
:name: Chaise Conn
:email:    chaise.conn@iontra.com
:header-args:    :noweb yes :mkdirp true
:ID: beta
:END:

Configs for my Iontra laptop

#+include: ./base.org

#+begin_src elisp :noweb-ref configs
(setq inbox-file "~/sync/inbox.org"
      org-directory "~/sync"
      scrot-directory "~/sync"
      org-agenda-files '("~/sync/areas/fresh.org")
      dotfiles-directory "~/dotfiles")

(add-to-list 'exec-path "~/.guix-profile/bin")
#+end_src

#+begin_src elisp :noweb-ref packages
(package! exwm)
(package! org-drill)
#+end_src
