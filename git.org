* Git
** Config

Most of my git work is done in Emacs's [[https://magit.vc/][Magit]] interface, but for the occasional CLI work a gitconfig is helpful

#+begin_src conf :tangle "~/.config/git/config"
[user]
    name = "<<machine-prop(prop="name")>>"
    email = "<<machine-prop(prop="email")>>"

[github]
  user = Jdaco

[color]
  ui = yes

[color "status"]
    added      =  "red black"
    changed    =  "magenta black"
    untracked  =  "blue black"

[color "diff"]
    context  =  "239"
    meta     =  "white"
    new      =  "red"
    old      =  "blue"
    frag     =  "magenta"

[color "branch"]
    current  =  "white"
    local    =  "239"

[status]
    short               =  yes
    showuntrackedfiles  =  no

[merge]
    ff = no

[pull]
    ff = yes

[commit]
    verbose = yes

[log]
    graphcolors = red,blue,magenta

[alias]
    a = add
    ap = add --patch
    au = add --update
    b = branch
    c = commit
    ca = commit --all
    cb = checkout -b
    co = checkout
    cp = cherry-pick
    c- = commit --amend
    d = diff
    f = fetch
    m = merge
    r = remote
    rs = remote show
    s = status
    nuke = "checkout -f HEAD"
    lg = log --color=always --graph --all --pretty=format:'%C(239)%h%C(reset) %C(magenta)%d%C(reset) %s %C(239)<%an>%C(reset)'
    local = "!git --git-dir .git.local --work-tree ."
    log-show = "!git lg | SHELL=/usr/bin/bash fzf --ansi --no-sort --layout=reverse --preview-window bottom --preview 'echo {} | grep -o -E \"[[:alnum:]]+\" | head -n 1 | xargs -r git show | diff-so-fancy'"
    bp = "!git branch --merged develop | sed -E 's,[*]? +,,' | grep -v -E 'develop|master' | xargs -n 1 -p git branch -d"
    current-branch = "rev-parse --abbrev-ref HEAD"
    parent = "!git show-branch | grep '*' | grep -v \"$(git current-branch)\" | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//' #"
    branched-from = "!git merge-base \"$(git current-branch)\" \"$(git parent)\" | tr -d '[:space:]'"
    changed-files = "!git diff --diff-filter=d --name-only \"$(git branched-from)\" | grep -E '.jsx?$|.ts$'"
#+end_src
